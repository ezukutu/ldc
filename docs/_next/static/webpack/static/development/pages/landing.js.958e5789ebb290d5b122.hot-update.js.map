{"version":3,"file":"static/webpack/static/development/pages/landing.js.958e5789ebb290d5b122.hot-update.js","sources":["webpack:///./components/SimpleHorizontalBarChart/SimpleHorizontalBarChart.js"],"sourcesContent":["import React,  { useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport * as d3 from \"d3\";\nimport { keys, entries } from 'd3-collection';\nimport { CHALLENGES_CODES_SHORT } from 'helpers/surveycodes.js';\n\nconst formatValue = x => isNaN(x) ? \"N/A\" : x.toLocaleString(\"en\");\nconst formatPercent = d3.format(\".1%\");\n\nexport default function HorizontalBarChart(props) {\n  if (props.countrycode === \"\") {\n    return <div></div>;\n  }\n  var data = [];\n  var total = 0;\n  for (const [key, value] of Object.entries(props.data[props.countrycode])) {\n    if (key === \"total\") {\n      total = value;\n    } else {\n      let obj = new Object();\n      obj.key = key;\n      obj.value = value;\n      data.push(obj);\n    }\n  }\n  if (total === 0) {\n    return <div></div>;\n  }\n\n  data = data.sort(function(a, b) {\n    if (a.value > b.value) {\n      return -1;\n    }\n    if (a.value < b.value) {\n      return 1;\n    }\n    return 0;\n  });\n\n  const width = 500;\n  const margin = ({top: 0, right: 50, bottom: 0, left: 20});\n  const height = data.length * 30 + margin.top + margin.bottom;\n\n  for (let row of data) {\n    row.value /= total;\n  }\n\n\tuseEffect(() => {\n\n    const chart = d3.select(`#svg${props.id}`)\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n      .style(\"display\", \"auto\");\n    chart.attr(\"viewBox\", [0, 0, width, height])\n\t\t\t .style(\"overflow\", \"visible\");\n\n    let\tx = d3.scaleLinear()\n      .range([margin.left, width - margin.right]);\n    chart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(width / 100, \"%\"))\n      .selectAll(\"text\")\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n      .style(\"text-anchor\", \"end\");\n    let y = d3.scaleBand()\n      .domain(data.map(function(d) { return d.key; }))\n      .range([ margin.top, height - margin.bottom ])\n      .padding(.08);\n    chart.append(\"g\")\n      .call(d3.axisLeft(y))\n      .attr(\"transform\", `translate(${margin.left},0)`);\n\n\t\tchart.selectAll(\"myRect\")\n\t    .data(data)\n\t    .enter()\n\t    .append(\"rect\")\n\t    .attr(\"x\", x(0) )\n\t    .attr(\"width\", function(d) { return x(d.value); })\n      .attr(\"y\", function(d) { return y(d.key); })\n\t    .attr(\"height\", y.bandwidth() )\n\t    .attr(\"fill\", \"#69b3a2\")\n    });\n\n\treturn (\n    <div>\n      <svg className={\"horizontalBarChart\"} id={\"svg\"+props.id} width={width} height={height} />\n    </div>\n\t    );\n\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAjCA;AAAA;AACA;AADA;AAkCA;AAAA;AACA;AACA;AApCA;AAAA;AAAA;AAAA;AAAA;AACA;AAqCA;AAEA;AAIA;AAGA;AAEA;AAMA;AACA;AAAA;AAGA;AAIA;AAKA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;;;;A","sourceRoot":""}